
(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['cookbook'] = template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.recipe,depth0,{"name":"recipe","data":data,"indent":"                ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"3":function(container,depth0,helpers,partials,data) {
    return "                <p><em>Your cookbook is currently empty. Save recipes to stash them here!</em></p>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.header,depth0,{"name":"header","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "<div class=\"cookbook\">\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.recipes : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "          </div>";
},"usePartial":true,"useData":true});
templates['header'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<nav class=\"navbar navbar-static-top\">\n    <div class=\"container-fluid \">\n      <!-- Brand and toggle get grouped for better mobile display -->\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"\"><div class=\"header-logo\"></div></a>\n      </div>\n\n      <!-- Collect the nav links, forms, and other content for toggling -->\n      <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n        <ul class=\"nav navbar-nav navbar-right\">\n          <li class=\"active\"><a href=\"\">PANTRY</a></li>\n          <li class=\"active\"><a href=\"\" id=\"cookbook-btn\">COOKBOOK</a></li>\n<!-- \n          <li><img id=\"mazzetti\" class=\"navpic\" src=\"img/domm.jpg\" alt=\"Bro Science\"></li> -->\n        </ul>\n      </div>\n    </div>\n  </nav>\n  ";
},"useData":true});
templates['index'] = template({"1":function(container,depth0,helpers,partials,data) {
    var helper;

  return "          "
    + container.escapeExpression(((helper = (helper = helpers.error || (depth0 != null ? depth0.error : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"error","hash":{},"data":data}) : helper)))
    + "\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<nav class=\"navbar navbar-static-top\">\n    <div class=\"container-fluid \">\n      <!-- Brand and toggle get grouped for better mobile display -->\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"\"><div class=\"header-logo\"></div></a>\n      </div>\n\n      <!-- Collect the nav links, forms, and other content for toggling -->\n      <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n        <ul class=\"nav navbar-nav navbar-right\">\n          <li class=\"active\"><a href=\"\" id=\"register-btn\">SIGN UP</a></li>\n<!-- \n          <li><img id=\"mazzetti\" class=\"navpic\" src=\"img/domm.jpg\" alt=\"Bro Science\"></li> -->\n        </ul>\n      </div>\n    </div>\n  </nav>\n\n  \n\n\n<div class =\"container-fluid\">\n<div class=\"row\">  \n  <div class=\"col-md-4 col-md-offset-4 signin-box\" >\n    <h2 class=\"text-center\">Sign in</h2>\n      <div class=\"error\">\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.error : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </div>\n\n      <form id=\"signin-form\">\n      <div>\n        <label for=\"inputUsername\" class=\"sr-only\"><span>Username</span></label>\n        <input type=\"username\" id=\"inputUsername\" name=\"username\" class=\"form-control\" placeholder=\"Username\" required autofocus/>\n      </div>\n      <div>\n        <label for=\"inputPassword\" class=\"sr-only\"><span>Password</span></label>\n        <input type=\"password\" id=\"inputPassword\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required/>\n      </div>\n        <input type=\"submit\" class=\"btn btn-lg btn-warning btn-block\"/>\n      </form>\n</div>\n</div>\n</div>\n";
},"useData":true});
templates['ingredient'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "<div class=\"ingredient\">\n  <label>"
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.ingredient : depth0)) != null ? stack1.name : stack1), depth0))
    + " </label><p>: "
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.ingredient : depth0)) != null ? stack1.amount : stack1), depth0))
    + " </p>\n</div>";
},"useData":true});
templates['recipe'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<div class=\"recipe\" data-recipeid="
    + alias4(((helper = (helper = helpers._id || (depth0 != null ? depth0._id : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"_id","hash":{},"data":data}) : helper)))
    + ">\n  <p>"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + "</p>\n  <img src = "
    + alias4(container.lambda(((stack1 = (depth0 != null ? depth0.imageURLs : depth0)) != null ? stack1["1"] : stack1), depth0))
    + ">\n  \n</div>\n\n\n";
},"useData":true});
templates['recipeView'] = template({"1":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"ingredient\">"
    + container.escapeExpression(container.lambda(depth0, depth0))
    + "</div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return ((stack1 = container.invokePartial(partials.header,depth0,{"name":"header","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "<div data-recipeid="
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.recipe : depth0)) != null ? stack1._id : stack1), depth0))
    + ">\n\n<div class=\"container-fluid\">\n\n<div class=\"row\">\n  <div class=\"col-md-5 recipe-box\">\n    <div class=\"recipe-view-img\" style=\"background-image: url("
    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.recipe : depth0)) != null ? stack1.imageURLs : stack1)) != null ? stack1["0"] : stack1), depth0))
    + ")\"></div>\n    <div class=\"serving-label\">Serving size: "
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.recipe : depth0)) != null ? stack1.servingSize : stack1), depth0))
    + "</div>\n    <div class=\"recipe-name\">"
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.recipe : depth0)) != null ? stack1.name : stack1), depth0))
    + "</div>\n  </div>\n\n  <div class=\"col-md-6 col-md-offset-1 recipe-box\">\n    <div class=\"ingredients\">\n      <div class=\"ingredients-header\">Ingredients: </div>\n      \n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},((stack1 = (depth0 != null ? depth0.recipe : depth0)) != null ? stack1.ingredients : stack1),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </div>\n\n    <div class=\"instructions\">\n      <div class=\"instructions-label\">Instructions: </div>\n      <a class=\"recipe-url\" href=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.recipe : depth0)) != null ? stack1.sourceURL : stack1), depth0))
    + "\">Full instructions here</a>\n    </div>\n    <button id=\"save-btn\" data-id="
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.recipe : depth0)) != null ? stack1._id : stack1), depth0))
    + " class=\"btn btn-lg btn-warning save-btn\">Save Recipe to Cookbook</button>\n    \n\n\n  </div>\n</div>\n\n</div>\n</div>";
},"usePartial":true,"useData":true});
templates['register'] = template({"1":function(container,depth0,helpers,partials,data) {
    var helper;

  return "      "
    + container.escapeExpression(((helper = (helper = helpers.error || (depth0 != null ? depth0.error : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"error","hash":{},"data":data}) : helper)))
    + "\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<nav class=\"navbar navbar-static-top\">\n    <div class=\"container-fluid \">\n      <!-- Brand and toggle get grouped for better mobile display -->\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"\"><div class=\"header-logo\"></div></a>\n      </div>\n\n      <!-- Collect the nav links, forms, and other content for toggling -->\n      <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n        <ul class=\"nav navbar-nav navbar-right\">\n          <li class=\"active\"><a href=\"#\" id=\"home-link\" >BACK TO HOME</a></li>\n<!-- \n          <li><img id=\"mazzetti\" class=\"navpic\" src=\"img/domm.jpg\" alt=\"Bro Science\"></li> -->\n        </ul>\n      </div>\n    </div>\n  </nav>\n  \n\n\n\n<div class =\"container-fluid\">\n<div class=\"row\">  \n  <div class=\"col-md-4 col-md-offset-4 signin-box\" >\n  \n\n  <h2 class=\"text-center\">Register</h2>\n  <div class=\"error\">\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.error : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </div>\n<!--   <form id=\"register-form\">\n    <div>Username: <input type=\"text\" name=\"username\" required /></div>\n    <div>Password: <input type=\"password\" name=\"password\" required /></div>\n    <div>Confirm Password: <input type=\"password\" name=\"confirm\" required /></div>\n    <input type=\"submit\" />\n  </form> -->\n\n\n  <form id=\"register-form\">\n  <div>\n    <label for=\"inputUsername\" class=\"sr-only\"><span>Username</span></label>\n    <input type=\"username\" id=\"inputUsername\" name=\"username\" class=\"form-control\" placeholder=\"Username\" required autofocus/>\n  </div>\n  <div>\n    <label for=\"inputPassword\" class=\"sr-only\"><span>Password</span></label>\n    <input type=\"password\" id=\"inputPassword\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required/>\n  </div>\n  <div>\n    <label for=\"inputPasswordConfirm\" class=\"sr-only\"><span>Confirm Password</span></label>\n    <input type=\"password\" id=\"inputPasswordConfirm\" name=\"confirm\" class=\"form-control\" placeholder=\"Confirm Password\" required/>\n  </div>\n    <input type=\"submit\" class=\"btn btn-lg btn-warning btn-block\"/>\n  </form>\n</div>\n</div>\n</div>";
},"useData":true});
templates['search'] = template({"1":function(container,depth0,helpers,partials,data) {
    var helper;

  return "              "
    + container.escapeExpression(((helper = (helper = helpers.error || (depth0 != null ? depth0.error : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"error","hash":{},"data":data}) : helper)))
    + "\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.recipes : depth0),{"name":"each","hash":{},"fn":container.program(4, data, 0),"inverse":container.program(6, data, 0),"data":data})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.recipe,depth0,{"name":"recipe","data":data,"indent":"                ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"6":function(container,depth0,helpers,partials,data) {
    return "                <p><em>No recipes found. We suggest that you allow additional ingredients in your search.</em></p>\n";
},"8":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "        <li class=\"ingredient\" style=\"list-style-type:none\" data-ingredient-id="
    + alias2(alias1(depth0, depth0))
    + ">"
    + alias2(alias1(depth0, depth0))
    + "<button class=\"btn btn-warning delete-button\" type=\"button\">Delete</button></li>\n";
},"10":function(container,depth0,helpers,partials,data) {
    return "        <p><em>No ingredients yet!</em></p>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {};

  return ((stack1 = container.invokePartial(partials.header,depth0,{"name":"header","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n<div class=\"welcome\">Welcome, <b>"
    + container.escapeExpression(((helper = (helper = helpers.currentUser || (depth0 != null ? depth0.currentUser : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"currentUser","hash":{},"data":data}) : helper)))
    + "</b> (<a href=\"#\" id=\"logout-link\">logout</a>)</div>\n\n<div class=\"container-fluid\">\n<div class=\"row\">\n  <div class=\"wrapper\">\n    <div class=\"col-md-6 left\">\n        <h1>Find recipes.</h1>\n\n        <form id=\"search-form\">\n<!--           <div>Serving size: <input type=\"number\" name=\"servingsize\"/></div>\n          <div>Additional ingredients: <input type=\"text\" name=\"additional\"/></div> -->\n          <input type=\"submit\" value=\"Scavenge\" class=\"btn btn-warning\"/>\n        </form>\n\n          <div class=\"error\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.error : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "          </div>\n\n          <div class=\"results\">\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.searched : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "          </div>\n    </div>\n\n    <div class=\"col-md-4 col-md-offset-1 right\">\n      <h1>Your pantry.</h1>\n\n      <div id=\"ingredientsList\">\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.ingredients : depth0),{"name":"each","hash":{},"fn":container.program(8, data, 0),"inverse":container.program(10, data, 0),"data":data})) != null ? stack1 : "")
    + "      </div>\n\n      <form id=\"pantry-form\">\n        <div>Add a new ingredient: <input class=\"form-control\" id=\"new-ingredient\" name=\"ingredient\" required />\n        <input type=\"submit\" value=\"Add\" class=\"btn btn-warning\"/></div>\n      </form>\n      </div>\n  </div>\n  </div>\n";
},"usePartial":true,"useData":true});
})();
!function(){var n=Handlebars.template,a=Handlebars.templates=Handlebars.templates||{};a.header=n({compiler:[7,">= 4.0.0"],main:function(n,a,e,s,l){return'<nav class="navbar navbar-static-top">\n    <div class="container-fluid ">\n      <!-- Brand and toggle get grouped for better mobile display -->\n      <div class="navbar-header">\n        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n          <span class="sr-only">Toggle navigation</span>\n          <span class="icon-bar"></span>\n          <span class="icon-bar"></span>\n          <span class="icon-bar"></span>\n        </button>\n        <a class="navbar-brand" href=""><div class="header-logo"></div></a>\n      </div>\n\n      <!-- Collect the nav links, forms, and other content for toggling -->\n      <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n        <ul class="nav navbar-nav navbar-right">\n          <li class="active"><a href="">PANTRY</a></li>\n          <li><a href="">COOKBOOK</a></li>\n<!-- \n          <li><img id="mazzetti" class="navpic" src="img/domm.jpg" alt="Bro Science"></li> -->\n        </ul>\n      </div>\n    </div>\n  </nav>\n  '},useData:!0}),a.index=n({1:function(n,a,e,s,l){var i;return"          "+n.escapeExpression((i=null!=(i=e.error||(null!=a?a.error:a))?i:e.helperMissing,"function"==typeof i?i.call(null!=a?a:{},{name:"error",hash:{},data:l}):i))+"\n"},compiler:[7,">= 4.0.0"],main:function(n,a,e,s,l){var i;return'<nav class="navbar navbar-static-top">\n    <div class="container-fluid ">\n      <!-- Brand and toggle get grouped for better mobile display -->\n      <div class="navbar-header">\n        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n          <span class="sr-only">Toggle navigation</span>\n          <span class="icon-bar"></span>\n          <span class="icon-bar"></span>\n          <span class="icon-bar"></span>\n        </button>\n        <a class="navbar-brand" href=""><div class="header-logo"></div></a>\n      </div>\n\n      <!-- Collect the nav links, forms, and other content for toggling -->\n      <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n        <ul class="nav navbar-nav navbar-right">\n          <li class="active"><a href="" id="register-btn">SIGN UP</a></li>\n<!-- \n          <li><img id="mazzetti" class="navpic" src="img/domm.jpg" alt="Bro Science"></li> -->\n        </ul>\n      </div>\n    </div>\n  </nav>\n\n  \n\n\n<div class ="container-fluid">\n<div class="row">  \n  <div class="col-md-4 col-md-offset-4 signin-box" >\n    <h2 class="text-center">Sign in</h2>\n      <div class="error">\n'+(null!=(i=e["if"].call(null!=a?a:{},null!=a?a.error:a,{name:"if",hash:{},fn:n.program(1,l,0),inverse:n.noop,data:l}))?i:"")+'      </div>\n\n      <form id="signin-form">\n      <div>\n        <label for="inputUsername" class="sr-only"><span>Username</span></label>\n        <input type="username" id="inputUsername" name="username" class="form-control" placeholder="Username" required autofocus/>\n      </div>\n      <div>\n        <label for="inputPassword" class="sr-only"><span>Password</span></label>\n        <input type="password" id="inputPassword" name="password" class="form-control" placeholder="Password" required/>\n      </div>\n        <input type="submit" class="btn btn-lg btn-warning btn-block"/>\n      </form>\n</div>\n</div>\n</div>\n'},useData:!0}),a.ingredient=n({compiler:[7,">= 4.0.0"],main:function(n,a,e,s,l){var i,r=n.lambda,t=n.escapeExpression;return'<div class="ingredient">\n  <label>'+t(r(null!=(i=null!=a?a.ingredient:a)?i.name:i,a))+" </label><p>: "+t(r(null!=(i=null!=a?a.ingredient:a)?i.amount:i,a))+" </p>\n</div>"},useData:!0}),a.recipe=n({compiler:[7,">= 4.0.0"],main:function(n,a,e,s,l){var i,r,t=null!=a?a:{},o=e.helperMissing,d="function",c=n.escapeExpression;return'<div class="recipe" data-recipeid='+c((r=null!=(r=e._id||(null!=a?a._id:a))?r:o,typeof r===d?r.call(t,{name:"_id",hash:{},data:l}):r))+" data-recipesize="+c((r=null!=(r=e.size||(null!=a?a.size:a))?r:o,typeof r===d?r.call(t,{name:"size",hash:{},data:l}):r))+">\n  <p>"+c((r=null!=(r=e.name||(null!=a?a.name:a))?r:o,typeof r===d?r.call(t,{name:"name",hash:{},data:l}):r))+"</p>\n  <img src = "+c(n.lambda(null!=(i=null!=a?a.imageURLs:a)?i[1]:i,a))+">\n  \n</div>\n\n\n"},useData:!0}),a.recipeView=n({1:function(n,a,e,s,l){return'        <div class="ingredient">'+n.escapeExpression(n.lambda(a,a))+"</div>\n"},compiler:[7,">= 4.0.0"],main:function(n,a,e,s,l){var i,r=n.lambda,t=n.escapeExpression;return(null!=(i=n.invokePartial(s.header,a,{name:"header",data:l,helpers:e,partials:s,decorators:n.decorators}))?i:"")+"<div data-recipeid="+t(r(null!=(i=null!=a?a.recipe:a)?i._id:i,a))+'>\n\n<div class="container-fluid">\n\n<div class="row">\n  <div class="col-md-5 recipe-box">\n    <div class="recipe-view-img" style="background-image: url('+t(r(null!=(i=null!=(i=null!=a?a.recipe:a)?i.imageURLs:i)?i[0]:i,a))+')"></div>\n    <div class="serving-label">Serving size: '+t(r(null!=(i=null!=a?a.recipe:a)?i.servingSize:i,a))+'</div>\n    <div class="recipe-name">'+t(r(null!=(i=null!=a?a.recipe:a)?i.name:i,a))+'</div>\n  </div>\n\n  <div class="col-md-6 col-md-offset-1 recipe-box">\n    <div class="ingredients">\n      <div class="ingredients-header">Ingredients: </div>\n      \n'+(null!=(i=e.each.call(null!=a?a:{},null!=(i=null!=a?a.recipe:a)?i.ingredients:i,{name:"each",hash:{},fn:n.program(1,l,0),inverse:n.noop,data:l}))?i:"")+'    </div>\n\n    <div class="instructions">\n      <div class="instructions-label">Instructions: </div>\n      <a class="recipe-url" href="'+t(r(null!=(i=null!=a?a.recipe:a)?i.sourceURL:i,a))+'">Full instructions here</a>\n    </div>\n     <button id="save-btn" class="btn btn-lg btn-warning">Save Recipe to Cookbook</button>\n    \n\n\n  </div>\n</div>\n\n</div>\n</div>'},usePartial:!0,useData:!0}),a.register=n({1:function(n,a,e,s,l){var i;return"      "+n.escapeExpression((i=null!=(i=e.error||(null!=a?a.error:a))?i:e.helperMissing,"function"==typeof i?i.call(null!=a?a:{},{name:"error",hash:{},data:l}):i))+"\n"},compiler:[7,">= 4.0.0"],main:function(n,a,e,s,l){var i;return'<nav class="navbar navbar-static-top">\n    <div class="container-fluid ">\n      <!-- Brand and toggle get grouped for better mobile display -->\n      <div class="navbar-header">\n        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n          <span class="sr-only">Toggle navigation</span>\n          <span class="icon-bar"></span>\n          <span class="icon-bar"></span>\n          <span class="icon-bar"></span>\n        </button>\n        <a class="navbar-brand" href=""><div class="header-logo"></div></a>\n      </div>\n\n      <!-- Collect the nav links, forms, and other content for toggling -->\n      <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n        <ul class="nav navbar-nav navbar-right">\n          <li class="active"><a href="#" id="home-link" >BACK TO HOME</a></li>\n<!-- \n          <li><img id="mazzetti" class="navpic" src="img/domm.jpg" alt="Bro Science"></li> -->\n        </ul>\n      </div>\n    </div>\n  </nav>\n  \n\n\n\n<div class ="container-fluid">\n<div class="row">  \n  <div class="col-md-4 col-md-offset-4 signin-box" >\n  \n\n  <h2 class="text-center">Register</h2>\n  <div class="error">\n'+(null!=(i=e["if"].call(null!=a?a:{},null!=a?a.error:a,{name:"if",hash:{},fn:n.program(1,l,0),inverse:n.noop,data:l}))?i:"")+'  </div>\n<!--   <form id="register-form">\n    <div>Username: <input type="text" name="username" required /></div>\n    <div>Password: <input type="password" name="password" required /></div>\n    <div>Confirm Password: <input type="password" name="confirm" required /></div>\n    <input type="submit" />\n  </form> -->\n\n\n  <form id="register-form">\n  <div>\n    <label for="inputUsername" class="sr-only"><span>Username</span></label>\n    <input type="username" id="inputUsername" name="username" class="form-control" placeholder="Username" required autofocus/>\n  </div>\n  <div>\n    <label for="inputPassword" class="sr-only"><span>Password</span></label>\n    <input type="password" id="inputPassword" name="password" class="form-control" placeholder="Password" required/>\n  </div>\n  <div>\n    <label for="inputPasswordConfirm" class="sr-only"><span>Confirm Password</span></label>\n    <input type="password" id="inputPasswordConfirm" name="confirm" class="form-control" placeholder="Confirm Password" required/>\n  </div>\n    <input type="submit" class="btn btn-lg btn-warning btn-block"/>\n  </form>\n</div>\n</div>\n</div>'},useData:!0}),a.search=n({1:function(n,a,e,s,l){var i;return"              "+n.escapeExpression((i=null!=(i=e.error||(null!=a?a.error:a))?i:e.helperMissing,"function"==typeof i?i.call(null!=a?a:{},{name:"error",hash:{},data:l}):i))+"\n"},3:function(n,a,e,s,l,i,r){var t;return null!=(t=e.each.call(null!=a?a:{},null!=a?a.recipes:a,{name:"each",hash:{},fn:n.program(4,l,0,i,r),inverse:n.program(6,l,0,i,r),data:l}))?t:""},4:function(n,a,e,s,l,i,r){var t;return null!=(t=n.invokePartial(s.recipe,a,{name:"recipe",hash:{size:null!=r[1]?r[1].size:r[1]},data:l,indent:"                ",helpers:e,partials:s,decorators:n.decorators}))?t:""},6:function(n,a,e,s,l){return"                <p><em>No recipes found. We suggest that you allow additional ingredients in your search.</em></p>\n"},8:function(n,a,e,s,l){var i=n.lambda,r=n.escapeExpression;return'        <li class="ingredient" style="list-style-type:none" data-ingredient-id='+r(i(a,a))+">"+r(i(a,a))+'<button class="btn btn-warning delete-button" type="button">Delete</button></li>\n'},10:function(n,a,e,s,l){return"        <p><em>No ingredients yet!</em></p>\n"},compiler:[7,">= 4.0.0"],main:function(n,a,e,s,l,i,r){var t,o,d=null!=a?a:{};return(null!=(t=n.invokePartial(s.header,a,{name:"header",data:l,helpers:e,partials:s,decorators:n.decorators}))?t:"")+'\n<div class="welcome">Welcome, <b>'+n.escapeExpression((o=null!=(o=e.currentUser||(null!=a?a.currentUser:a))?o:e.helperMissing,"function"==typeof o?o.call(d,{name:"currentUser",hash:{},data:l}):o))+'</b> (<a href="#" id="logout-link">logout</a>)</div>\n\n<div class="container-fluid">\n<div class="row">\n  <div class="wrapper">\n    <div class="col-md-6 left">\n        <h1>Find recipes.</h1>\n\n        <form id="search-form">\n           <div>Serving size: <input type="number" name="servingsize"/></div>\n          <div>Additional ingredients: <input type="text" name="additional"/></div>\n          <input type="submit" value="Scavenge" class="btn btn-warning"/>\n        </form>\n\n          <div class="error">\n'+(null!=(t=e["if"].call(d,null!=a?a.error:a,{name:"if",hash:{},fn:n.program(1,l,0,i,r),inverse:n.noop,data:l}))?t:"")+'          </div>\n\n          <div class="results">\n'+(null!=(t=e["if"].call(d,null!=a?a.searched:a,{name:"if",hash:{},fn:n.program(3,l,0,i,r),inverse:n.noop,data:l}))?t:"")+'          </div>\n    </div>\n\n    <div class="col-md-4 col-md-offset-1 right">\n      <h1>Your pantry.</h1>\n\n      <div id="ingredientsList">\n'+(null!=(t=e.each.call(d,null!=a?a.ingredients:a,{name:"each",hash:{},fn:n.program(8,l,0,i,r),inverse:n.program(10,l,0,i,r),data:l}))?t:"")+'      </div>\n\n      <form id="pantry-form">\n        <div>Add a new ingredient: <input class="form-control" id="new-ingredient" name="ingredient" required />\n        <input type="submit" value="Add" class="btn btn-warning"/></div>\n      </form>\n      </div>\n  </div>\n  </div>\n'},usePartial:!0,useData:!0,useDepths:!0})}();

